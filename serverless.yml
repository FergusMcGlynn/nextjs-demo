service: ssr-react-next-christian

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-1
  memorySize: 1024
  environment:
    NODE_ENV: production

functions:
  server:
    handler: index.server
    events:
      - http: ANY /
      - http: ANY /{proxy+}

plugins:
  - serverless-apigw-binary
  - serverless-pseudo-parameters

custom:
  apigwBinary:
    types:
      - '*/*'
  domainName: nextjs.eu-west-1.demoapp.dev.app.york.ac.uk

resources:
  Resources:
    # SSL certificate for the application's domain name (see https://wiki.york.ac.uk/display/ittechdocs/HTTPS+for+apps)
    # Note that Serverless will try to evaluate anything that looks like a variable - ${...} including Cloudformation
    # variables - so use "serverless-pseudo-parameters" which will understand "#{AWS::Region}" as a Cloudformation variable
    SSLCertificate:
      Type: Custom::Certificate
      Properties:
        DomainName: ${self:custom.domainName}
        ValidationMethod: DNS
        ServiceToken: !Sub 'arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:binxio-cfn-certificate-provider'
    SSLCertificateDNSRecord:
      Type: Custom::CertificateDNSRecord
      Properties:
        CertificateArn: !Ref SSLCertificate
        DomainName: ${self:custom.domainName}
        ServiceToken: !Sub 'arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:binxio-cfn-certificate-provider'
    SSLCertificateValidationDomainRecord:
      Type: Custom::CNAME
      Properties:
        ServiceToken: 'arn:aws:sns:eu-west-1:230504789214:RequestRecordSet'
        Source: !GetAtt SSLCertificateDNSRecord.Name
        Target: !GetAtt SSLCertificateDNSRecord.Value
    IssuedSSLCertificate:
      Type: Custom::IssuedCertificate
      Properties:
        CertificateArn: !Ref SSLCertificate
        ServiceToken: !Sub 'arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:binxio-cfn-certificate-provider'
    # Setup the application's domain name as a custom domain name for API Gateway, then map it to the application's API
    ApiGatewayCustomDomainName:
      Type: AWS::ApiGateway::DomainName
      Properties:
        RegionalCertificateArn: !Ref IssuedSSLCertificate
        DomainName: ${self:custom.domainName}
        EndpointConfiguration:
          Types:
            - REGIONAL
    BasePathMapping:
      Type: AWS::ApiGateway::BasePathMapping
      DependsOn: "ApiGatewayDeployment${sls:instanceId}"
      Properties:
        BasePath: ''
        DomainName: !Ref ApiGatewayCustomDomainName
        RestApiId: !Ref ApiGatewayRestApi
        Stage: ${self:provider.stage}
    # DNS CNAME mapping the application's domain name to the behind-the-scenes domain name for the API
    AppCNAME:
      Type: Custom::CNAME
      Properties:
        ServiceToken: "arn:aws:sns:eu-west-1:230504789214:RequestRecordSet"
        Source: ${self:custom.domainName}.
        Target: !Join [ '', [ !GetAtt ApiGatewayCustomDomainName.RegionalDomainName, '.' ] ]

package:
  exclude:
    - .idea/**
    - node_modules/@babel/**
    - node_modules/ally.js/**
    - node_modules/caniuse-lite/**
    - node_modules/lodash/**
    - node_modules/webpack/**
    - node_modules/terser/**
    - node_modules/es5-ext/**
    - node_modules/resolve-url-loader/**
    - node_modules/postcss/**
    - node_modules/acorn/**
    - node_modules/ajv/**
    - node_modules/@webassemblyjs/**
    - node_modules/cssnano-preset-simple/**
    - node_modules/snapdragon/**
    - node_modules/@next/**
    - node_modules/regenerate-unicode-properties/**
    - node_modules/pako/**
    - node_modules/source-map/**
    - node_modules/bluebird/**
    - node_modules/uri-js/**
    - node_modules/ast-types/**
    - node_modules/watchpack-chokidar2/**
    - node_modules/terser-webpack-plugin/**
    - node_modules/core-js-compat/**
    - node_modules/neo-async/**
    - node_modules/postcss-selector-parser/**
    - node_modules/css-loader/**
    - node_modules/sass-loader/**
    - node_modules/buffer/**
    - node_modules/adjust-sourcemap-loader/**
    - node_modules/ext/**
    - node_modules/tr46/**
    - node_modules/micromatch/**
